generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  link         String    @unique
  nickname     String
  email        String
  profileImage String
  description  String
  createdAt    DateTime  @default(now())
  gooogleUid   String?   @unique
  kakaoUid     String?   @unique
  followers    Follows[] @relation("follower")
  following    Follows[] @relation("following")
  myPost       Post[]    @relation("author")
  receivePost  Post[]    @relation("reveiver")
  lovePost     Post[]    @relation("love")
  bookmarkPost Post[]    @relation("bookmark")
  reports      Report[]  @relation("reportuser")
}

model Follows {
  followerId  String
  followingId String
  follower    User   @relation("follower", fields: [followerId], references: [id])
  following   User   @relation("following", fields: [followingId], references: [id])

  @@id([followerId, followingId])
  @@index([followingId], map: "Follows_followingId_fkey")
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isAnony     Boolean
  isCommunity Boolean
  reveiverId  String?
  authorId    String
  loveCount   Int      @default(0)
  author      User     @relation("author", fields: [authorId], references: [id])
  reveiver    User?    @relation("reveiver", fields: [reveiverId], references: [id])
  lover       User[]   @relation("love")
  bookmaker   User[]   @relation("bookmark")
  reports     Report[] @relation("reportpost")

  @@index([authorId], map: "CommunityPost_authorId_fkey")
  @@index([reveiverId], map: "Post_reveiverId_fkey")
}

model Report {
  id        String   @id @default(uuid())
  postId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation("reportpost", fields: [postId], references: [id])
  user      User     @relation("reportuser", fields: [userId], references: [id])
}
